// This is an empty scss file for your custom styles - Please add your super duper awesome mega design styles here

*,
*::before,
*::after {
  box-sizing: border-box;
}


h1, h2, h3, h4, h5, h6 {
	font-family: 'Abril Fatface', serif;
	font-weight: 700;
}

h1 {
	font-size: 5rem;
}

h2 {
	font-size: 4rem;
}

p {
	font-size: 1.3rem;
}

.entry-header {
	margin-top: 100px;
}

figure {
  padding: 10px;
  border: 1px solid #000000;
  background-color: #ffffff;
}

figure img {
	width: 100%;
	height: auto;
}

figcaption, .wp-caption-text {
  margin: 15px 0;
  font-size: .8rem;
  font-weight: 300;
  line-height: .9rem;
}

/*header menu*/

#main-nav {
	width: 100%;
	background-color: #ffffff;
	box-shadow: 0 1px $light-blue;
}

.menu-logo {
	height: auto;
	width: 70px;
	margin: 0 20px 0 80px;
}

.navbar-brand {
	font-family: 'Abril Fatface', serif;
	font-weight: 700;
	font-size: 1.3rem;
}

#main-menu a{
	color: $blue;	
	transition: all .4s ease;
}

#main-menu a:hover {
	background-color: $light-blue;
}

/*full page*/
#full-width-page-wrapper {
	padding: 0;
}

/*flex content*/

.title-row {
	padding: 30px 100px;
}

.topic-row {
	padding: 100px 100px;
}

.topic-row.green{
	background-color: $dark-green;
}

.topic-row.black {
	background-color: #000;
}

.topic-row.yellow {
	background-color: $yellow;
}

.topic-row.gray {
	background-color: $gray;
}

.topic-row.blue {
	background-color: $blue;
}

.topic-row.light-blue {
	background-color: $light-blue;
}

.topic-row.green p, .topic-row.green h1, .topic-row.green h2, .topic-row.green h3, 
.topic-row.black p, .topic-row.black h1, .topic-row.black h2, .topic-row.black h3,
.topic-row.blue p, .topic-row.blue h1, .topic-row.blue h2, .topic-row.blue h3 {
	color: #fff;
}

blockquote.big-quote {
	// background-color: rgba($blue,.2);
	box-shadow: 15px 15px $light-blue;
	border: 2px solid $light-blue;
}

blockquote.big-quote p{
	margin-left: 50px;
	padding: 0 40px;
	// border-left: 8px solid $blue;	
	font-size: 2rem;
	line-height: 1.2;
	font-style: italic;
}

blockquote.big-quote {
  font-size: 2.5rem;
  font-style: italic;
}

blockquote.big-quote:before {
  color: $blue;
  content: '\201C';
  font-size: 4em;
  line-height: 0.1em;
  margin-right: 0.25em;
  vertical-align: -0.3em;
  font-family: serif;
}

blockquote.big-quote footer {
	margin: 20px 0;
	text-decoration: none;
}

blockquote.big-quote footer p {
	border-left: none;
	font-size: 1.5rem;
	margin: 0 0 0 90px;
	padding: 0;
	font-weight: 100;
}

/*TIMELINE STUFF*/
.timeline {
  position: relative;
  width: 100%;
  max-width: 95%;
  margin: 100px auto;
  padding: 15px 0;
}

.timeline::after {
  content: '';
  position: absolute;
  width: 2px;
  background: $dark-green;
  top: 0;
  bottom: 0;
  left: 50%;
  margin-left: -1px;
}

.timeline-container {
  padding: 15px 30px;
  position: relative;
  background: inherit;
  width: 50%;
}

.timeline-container.left {
  left: 0;
}

.timeline-container.right {
  left: 50%;
}

.timeline-container::after {
  content: '';
  position: absolute;
  width: 16px;
  height: 16px;
  top: calc(50% - 8px);
  right: -8px;
  background: #ffffff;
  border: 2px solid $dark-green;
  border-radius: 16px;
  z-index: 1;
}

.timeline-container.right::after {
  left: -8px;
}

.timeline-container::before {
  content: '';
  position: absolute;
  width: 50px;
  height: 2px;
  top: calc(50% - 1px);
  right: 8px;
  background: $dark-green;
  z-index: 1;
}

.timeline-container.right::before {
  left: 8px;
}

.timeline-container .date {
  position: absolute;
  display: inline-block;
  top: calc(50% - 8px);
  text-align: right;
  font-size: 14px;
  font-weight: bold;
  color: $dark-green;
  text-transform: uppercase;
  letter-spacing: 1px;
  z-index: 1;
}

.timeline-container.left .date {
  right: -175px;
}

.timeline-container.right .date {
  left: -175px;
}

.timeline-container .icon {
  position: absolute;
  display: inline-block;
  width: 40px;
  height: 40px;
  padding: 9px 0;
  top: calc(50% - 20px);
  background: $yellow;
  border: 2px solid $dark-green;
  border-radius: 40px;
  text-align: center;
  font-size: 18px;
  color: $blue;
  z-index: 1;
}

.timeline-container.left .icon {
  right: 56px;
}


.timeline-container.right .icon {
  left: 56px;
}


.timeline-container .content {
  padding: 30px 90px 30px 50px;
  background: $yellow;
  position: relative;
  border-radius: 0 500px 500px 0;
}

.timeline-container.right .content {
  padding: 30px 30px 30px 120px;
  border-radius: 500px 0 0 500px;
}

.timeline-container .content h2 {
  margin: 0 0 10px 0;
  font-size: 2.5rem;
  color: #000000;
}

.timeline-container .content p {
  margin: 0;
}


.timeline-container .content blockquote p{
	margin-left: 50px;
	padding: 0 20px 20px 0;
	// border-left: 2px solid $dark-green;	
}

.timeline-container blockquote {
  font-size: 1.5rem;
  font-style: italic;
}

.timeline-container blockquote:before {
  color: $dark-green;
  content: '\201C';
  font-size: 4em;
  line-height: 0.1em;
  margin-right: 0.25em;
  vertical-align: -0.3em;
  font-family: serif;
}

@media (max-width: 767.98px) {
	.title-row, .topic-row {
		padding: 50px 20px;
	}

  .timeline::after {
    left: 90px;
  }

  .timeline-container {
    width: 100%;
    padding-left: 120px;
    padding-right: 30px;
  }

  .timeline-container.right {
    left: 0%;
  }

  .timeline-container.left::after, 
  .timeline-container.right::after {
    left: 82px;
  }

  .timeline-container.left::before,
  .timeline-container.right::before {
    left: 100px;
    border-color: transparent #006E51 transparent transparent;
  }

  .timeline-container.left .date,
  .timeline-container.right .date {
    right: auto;
    left: 15px;
  }

  .timeline-container.left .icon,
  .timeline-container.right .icon {
    right: auto;
    left: 146px;
  }

  .timeline-container.left .content,
  .timeline-container.right .content {
    padding: 30px 30px 30px 90px;
    border-radius: 500px 0 0 500px;
  }
}

//deal with wp admin bar and fixed top menu really well
//https://notlaura.com/a-quick-css-algorithm-for-handling-the-wp-admin-bar-with-a-fixed-menu/
:root {
  // 1. Set up the constant values
  // It's best practice to keep custom property values unit-less, lest you run into issues I don't understand well enough to explain here.
  --login-bar-height: 0;
  --menu-bar-height: 50;
}

// 2. Conditionally adjust the height of the login bar based on WordPress' values.
// if body has class "logged-in" and screen is > 783px, update the value.
.logged-in { // This class is added to <body> by WordPress
  @media ( min-width: 783px ) { // Breakpoint comes from WordPress
    --login-bar-height: 32;
  }
}

// 3. Bind the custom property values to regular properties.
// When the login bar isn't here, the value of the --login-bar-height 
// property will be 0 because of our conditional above. 
// So satisfying and clean and great!!!
// Is CSS a programming language? 
.navbar {
  // Fix the menu bar. This would also work for an absolutely positioned bar.
  width: 100%;
  position: fixed;
  
  // Use calc to apply a unit to the custom property value
  top: calc( var( --login-bar-height ) * 1px ); 
  height: calc( var( --menu-bar-height ) * 1px );
}

.main-content {
  // Pad the top of the content to account for both the menu and login bar height.
  padding-top: calc( ( var( --menu-bar-height ) + var( --login-bar-height ) ) * 1px );
}